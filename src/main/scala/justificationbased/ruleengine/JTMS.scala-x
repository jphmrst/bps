// Copyright (c) 1986-1993, Kenneth D. Forbus, Northwestern University
// and Johan de Kleer, the Xerox Corporation.
// Copyright (C) 2021 John Maraist.
// All rights reserved.
//
// See the LICENSE.txt and README-forbus-dekleer.txt files distributed
// with this work for a paragraph stating scope of permission and
// disclaimer of warranty, and for additional information regarding
// copyright ownership.  The above copyright notice and that paragraph
// must be included in any separate copy of this file.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied, for NON-COMMERCIAL use.  See the License for the specific
// language governing permissions and limitations under the License.

package org.maraist.truthmaintenancesystems.justificationbased.ruleengine
import scala.util.control.NonLocalReturns.*
import scala.collection.mutable.{ListBuffer, HashSet, HashMap, Queue}
import org.maraist.truthmaintenancesystems.justificationbased
import org.maraist.truthmaintenancesystems.justificationbased.{
  ContraAssumptions, TmsContradictionHandler, Node}

/** Implementation of justification-based truth maintenance systems.
  *
  * @param title Name of this TMS, for output.
  * @param nodeString Default formatter for TMS nodes.
  * @param debugging Debugging flag.
  * @param enqueueProcedure
  * @param contradictionHandler External handler for detecting contradictions.
  * @param checkingContradictions For external systems.
  * @tparam I Type of (external) informants in justifications.
  */
class JTMS[I](
  theTitle: String,
  theNodeString: (Node[Datum[I], I, Rule[I]]) => String =
    (n: Node[Datum[I], I, Rule[I]]) => s"${n.datum.toString()}",
  theDebugging: Boolean = false,
  theCheckingContradictions: Boolean = true,
  theEnqueueProcedure: Option[(Rule[I]) => Unit] = None,
  theContradictionHandler: Option[
    (justificationbased.JTMS[Datum[I], I, Rule[I]],
      ListBuffer[Node[Datum[I], I, Rule[I]]])
      => Unit
  ] = None
)
extends justificationbased.JTMS(
  theTitle, theNodeString, theDebugging, theCheckingContradictions,
  theEnqueueProcedure, theContradictionHandler)
